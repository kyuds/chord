syntax = "proto3";

option go_package = "github.com/kyuds/go-chord/pb";
package pb;

/*
protoc --go_out=. --go_opt=paths=source_relative \
    --go-grpc_out=. --go-grpc_opt=paths=source_relative \
    pb/chord.proto
*/

service Chord {
    // Chord Integrity RPCs
    rpc GetHashFuncCheckSum(Empty) returns (HashFuncResponse);

    // Chord Protocol RPCs
    rpc GetSuccessor(Empty) returns (AddressResponse);
    rpc ClosestPrecedingFinger(KeyRequest) returns (AddressResponse);

    // Node Joining RPCs
    rpc FindSuccessor(KeyRequest) returns (AddressResponse);
    rpc GetPredecessor(Empty) returns (AddressResponse);
    rpc Notify(AddressRequest) returns (Empty);

    // Node Failure Handling RPCs
    rpc CheckPredecessor(Empty) returns (Empty);
}

message Empty {}

message HashFuncResponse {
    string HashVal = 1;
}

message KeyRequest {
    string Key = 1;
}

message AddressRequest {
    string Address = 1;
}

message AddressResponse {
    string Address = 1;
}
