syntax = "proto3";

option go_package = "github.com/kyuds/chord/pb";
package pb;

service Chord {
    // Chord Integrity RPCs
    rpc GetChordConfigs(Empty) returns (ConfigResponse);

    // Chord Protocol RPCs
    rpc GetSuccessor(Empty) returns (AddressResponse);
    rpc ClosestPrecedingFinger(HashKeyRequest) returns (AddressResponse);

    // Node Joining RPC
    rpc FindPredecessor(HashKeyRequest) returns (AddressResponse);

    // Node Stabilization RPC
    rpc GetPredecessor(Empty) returns (AddressResponse);
    rpc GetSuccessorList(Empty) returns (AddressListResponse);
    rpc Notify(AddressRequest) returns (Empty);

    // HeartBeat RPC
    rpc Ping(Empty) returns (Empty);
}

// Note all of the response parameters are "optional"
// because during stabilization, a node will only report
// back whether its alive or not, but not actually respond
// to incoming queries. 

message Empty {}

message ConfigResponse {
    string HashFuncName = 1;
    int32 SuccessorListLength = 2;
}

message HashKeyRequest {
    string HashValue = 1;
}

message AddressResponse {
    bool Present = 1;
    string Address = 2;
}

message AddressRequest {
    string Address = 1;
}

message AddressListResponse {
    bool Present = 1;
    repeated string Addresses = 2;
    int32 Length = 3;
}
